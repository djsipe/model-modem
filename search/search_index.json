{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Model Modem \u2693\ufe0e Photo by Patrick Tomasso on Unsplash Rationale \u2693\ufe0e The concept of a blog has always appealed to me. I often find great tutorials and interesting content in other author's blogs. But, I frankly do not have the time or energy needed to maintain a blog that would be worth reading. I gave this issue a lot of thought and ultimately decided that what would be simpler would be a site where I could jot down my notes and findings on various topics in a less idempotent way. Blogs suffer from the traditional expectation that each article, once written, will not change over time. This puts a ton of pressure on blog authors to fully explore and expound upon their ideas on the first draft. What this site is attempting to achieve is a to present an evolving compendium generally composed of technical findings and documentation. Each page is subject to change and may move around as time goes on.","title":"Model Modem"},{"location":"#model-modem","text":"Photo by Patrick Tomasso on Unsplash","title":"Model Modem"},{"location":"#rationale","text":"The concept of a blog has always appealed to me. I often find great tutorials and interesting content in other author's blogs. But, I frankly do not have the time or energy needed to maintain a blog that would be worth reading. I gave this issue a lot of thought and ultimately decided that what would be simpler would be a site where I could jot down my notes and findings on various topics in a less idempotent way. Blogs suffer from the traditional expectation that each article, once written, will not change over time. This puts a ton of pressure on blog authors to fully explore and expound upon their ideas on the first draft. What this site is attempting to achieve is a to present an evolving compendium generally composed of technical findings and documentation. Each page is subject to change and may move around as time goes on.","title":"Rationale"},{"location":"dev/docker/","text":"Docker \u2693\ufe0e Helpful Docker Commands \u2693\ufe0e Below are some less-common Docker commands you might find useful. Get Runtime Statistics \u2693\ufe0e 1 docker stats $( docker ps --format = '{{.Names}}' ) This command will display detailed information about the docker containers you have running locally including: Container Name Name CPU % Memory Usage/Limit Memory % Network I/O Block Storage I/O Process IDs Remove All Stopped Containers \u2693\ufe0e 1 docker rm $( docker ps -a -q ) If you have a lot of stopped containers (perhaps you didn't supply a container name when running images), you can run this command to automatically remove all stopped containers. Remove Untagged Containers \u2693\ufe0e 1 docker images -q --filter \"dangling=true\" | xargs docker rmi Prune Everything \u2693\ufe0e 1 docker system prune --volumes This command will remove all unused: Containers Images (dangling & unused) Networks (Optionally) Volumes Note If you do not want to prune volumes, remove --volumes from the command above.","title":"Docker"},{"location":"dev/docker/#docker","text":"","title":"Docker"},{"location":"dev/docker/#helpful-docker-commands","text":"Below are some less-common Docker commands you might find useful.","title":"Helpful Docker Commands"},{"location":"dev/docker/#get-runtime-statistics","text":"1 docker stats $( docker ps --format = '{{.Names}}' ) This command will display detailed information about the docker containers you have running locally including: Container Name Name CPU % Memory Usage/Limit Memory % Network I/O Block Storage I/O Process IDs","title":"Get Runtime Statistics"},{"location":"dev/docker/#remove-all-stopped-containers","text":"1 docker rm $( docker ps -a -q ) If you have a lot of stopped containers (perhaps you didn't supply a container name when running images), you can run this command to automatically remove all stopped containers.","title":"Remove All Stopped Containers"},{"location":"dev/docker/#remove-untagged-containers","text":"1 docker images -q --filter \"dangling=true\" | xargs docker rmi","title":"Remove Untagged Containers"},{"location":"dev/docker/#prune-everything","text":"1 docker system prune --volumes This command will remove all unused: Containers Images (dangling & unused) Networks (Optionally) Volumes Note If you do not want to prune volumes, remove --volumes from the command above.","title":"Prune Everything"},{"location":"dev/git/","text":"Git \u2693\ufe0e Helpful Commands \u2693\ufe0e Repoint Remote Endpoint \u2693\ufe0e 1 git remote set-url <remote-name> <url> If you ever move your code to a new remote system (say from GitHub to GitLab), you can use this command to re-point your remote without having to remove and add the remote from scratch.","title":"Git"},{"location":"dev/git/#git","text":"","title":"Git"},{"location":"dev/git/#helpful-commands","text":"","title":"Helpful Commands"},{"location":"dev/git/#repoint-remote-endpoint","text":"1 git remote set-url <remote-name> <url> If you ever move your code to a new remote system (say from GitHub to GitLab), you can use this command to re-point your remote without having to remove and add the remote from scratch.","title":"Repoint Remote Endpoint"},{"location":"dev/mkdocs/","text":"MKDocs \u2693\ufe0e Troubleshooting \u2693\ufe0e GitHub Pages Custom Domain \u2693\ufe0e If you are deploying your MKDocs site via the mkdocs gh-deploy command and finding that it is resetting your custom domain name settings, there is a solution for that. There is an undocumented feature of MKDocs that it will publish your site to GitHub Pages using a custom domain name only if you create a file called CNAME which contains the custom domain name of your site. If you do not create this special file, your site's custom domain name will be wiped out each time you deploy your site. For example if your site was called modelmodem.com you would (and I did) create a file called CNAME and place it at the root of your docs_dir . 1 modelmodem.com File /docs/CNAME","title":"MKDocs"},{"location":"dev/mkdocs/#mkdocs","text":"","title":"MKDocs"},{"location":"dev/mkdocs/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"dev/mkdocs/#github-pages-custom-domain","text":"If you are deploying your MKDocs site via the mkdocs gh-deploy command and finding that it is resetting your custom domain name settings, there is a solution for that. There is an undocumented feature of MKDocs that it will publish your site to GitHub Pages using a custom domain name only if you create a file called CNAME which contains the custom domain name of your site. If you do not create this special file, your site's custom domain name will be wiped out each time you deploy your site. For example if your site was called modelmodem.com you would (and I did) create a file called CNAME and place it at the root of your docs_dir . 1 modelmodem.com File /docs/CNAME","title":"GitHub Pages Custom Domain"},{"location":"tech/my-stack/","text":"My Stack \u2693\ufe0e I recently had the pleasure of installing the Big Sur beta, having it totally corrupt my system, and having to re-install the OS from scratch. Through that process I boiled down the the base-level app ecosystem I use day to day and wanted to share it with you. Utilities \u2693\ufe0e Paste \u2693\ufe0e Paste is a fantastic clipboard manager application that saves items you copy to your clipboard into a tray at the bottom of your screen. It also provides a satisfying \"click\" sound when an item is copied to the clipboard\u2014a feature that is extremely helpful when copying MFA codes from your iPhone. 1Password \u2693\ufe0e Arguably the most important application you could have is some sort of password manager. There are many different options out there. I tried LastPass in the past but ultimately selected 1Password. It has a deep integration with MacOS and iOS which helps keep things simple. Bartender \u2693\ufe0e The number of apps providing compact menu bar apps for MacOS greatly outpaces the amount of space that exists in the menu bar itself. Bartender helps clear up space by allowing you to hide your less-used menu bar application. Pro Tip You can rearrange your menubar applications natively (with no app needed) by holding down ^ Ctrl and then clicking and dragging the menubar app.","title":"My Stack"},{"location":"tech/my-stack/#my-stack","text":"I recently had the pleasure of installing the Big Sur beta, having it totally corrupt my system, and having to re-install the OS from scratch. Through that process I boiled down the the base-level app ecosystem I use day to day and wanted to share it with you.","title":"My Stack"},{"location":"tech/my-stack/#utilities","text":"","title":"Utilities"},{"location":"tech/my-stack/#paste","text":"Paste is a fantastic clipboard manager application that saves items you copy to your clipboard into a tray at the bottom of your screen. It also provides a satisfying \"click\" sound when an item is copied to the clipboard\u2014a feature that is extremely helpful when copying MFA codes from your iPhone.","title":"Paste"},{"location":"tech/my-stack/#1password","text":"Arguably the most important application you could have is some sort of password manager. There are many different options out there. I tried LastPass in the past but ultimately selected 1Password. It has a deep integration with MacOS and iOS which helps keep things simple.","title":"1Password"},{"location":"tech/my-stack/#bartender","text":"The number of apps providing compact menu bar apps for MacOS greatly outpaces the amount of space that exists in the menu bar itself. Bartender helps clear up space by allowing you to hide your less-used menu bar application. Pro Tip You can rearrange your menubar applications natively (with no app needed) by holding down ^ Ctrl and then clicking and dragging the menubar app.","title":"Bartender"}]}