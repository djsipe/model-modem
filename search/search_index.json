{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Model Modem \u2693\ufe0e This site contains a compendium of various development-related information.","title":"Model Modem"},{"location":"#model-modem","text":"This site contains a compendium of various development-related information.","title":"Model Modem"},{"location":"dev/docker/","text":"Docker \u2693\ufe0e Helpful Docker Commands \u2693\ufe0e Below are some less-common Docker commands you might find useful. Get Runtime Statistics \u2693\ufe0e 1 docker stats $( docker ps --format = '{{.Names}}' ) This command will display detailed information about the docker containers you have running locally including: Container Name Name CPU % Memory Usage/Limit Memory % Network I/O Block Storage I/O Process IDs Remove All Stopped Containers \u2693\ufe0e 1 docker rm $( docker ps -a -q ) If you have a lot of stopped containers (perhaps you didn't supply a container name when running images), you can run this command to automatically remove all stopped containers. Remove Untagged Containers \u2693\ufe0e 1 docker images -q --filter \"dangling=true\" | xargs docker rmi Prune Everything \u2693\ufe0e 1 docker system prune --volumes This command will remove all unused: Containers Images (dangling & unused) Networks (Optionally) Volumes Note If you do not want to prune volumes, remove --volumes from the command above.","title":"Docker"},{"location":"dev/docker/#docker","text":"","title":"Docker"},{"location":"dev/docker/#helpful-docker-commands","text":"Below are some less-common Docker commands you might find useful.","title":"Helpful Docker Commands"},{"location":"dev/docker/#get-runtime-statistics","text":"1 docker stats $( docker ps --format = '{{.Names}}' ) This command will display detailed information about the docker containers you have running locally including: Container Name Name CPU % Memory Usage/Limit Memory % Network I/O Block Storage I/O Process IDs","title":"Get Runtime Statistics"},{"location":"dev/docker/#remove-all-stopped-containers","text":"1 docker rm $( docker ps -a -q ) If you have a lot of stopped containers (perhaps you didn't supply a container name when running images), you can run this command to automatically remove all stopped containers.","title":"Remove All Stopped Containers"},{"location":"dev/docker/#remove-untagged-containers","text":"1 docker images -q --filter \"dangling=true\" | xargs docker rmi","title":"Remove Untagged Containers"},{"location":"dev/docker/#prune-everything","text":"1 docker system prune --volumes This command will remove all unused: Containers Images (dangling & unused) Networks (Optionally) Volumes Note If you do not want to prune volumes, remove --volumes from the command above.","title":"Prune Everything"},{"location":"dev/git/","text":"Git \u2693\ufe0e Helpful Commands \u2693\ufe0e","title":"Git"},{"location":"dev/git/#git","text":"","title":"Git"},{"location":"dev/git/#helpful-commands","text":"","title":"Helpful Commands"},{"location":"dev/mkdocs/","text":"MKDocs \u2693\ufe0e Troubleshooting \u2693\ufe0e GitHub Pages Custom Domain \u2693\ufe0e If you are deploying your MKDocs site via the mkdocs gh-deploy command and finding that it is resetting your custom domain name settings, there is a solution for that. There is an undocumented feature of MKDocs that it will publish your site to GitHub Pages using a custom domain name only if you create a file called CNAME which contains the custom domain name of your site.","title":"MKDocs"},{"location":"dev/mkdocs/#mkdocs","text":"","title":"MKDocs"},{"location":"dev/mkdocs/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"dev/mkdocs/#github-pages-custom-domain","text":"If you are deploying your MKDocs site via the mkdocs gh-deploy command and finding that it is resetting your custom domain name settings, there is a solution for that. There is an undocumented feature of MKDocs that it will publish your site to GitHub Pages using a custom domain name only if you create a file called CNAME which contains the custom domain name of your site.","title":"GitHub Pages Custom Domain"}]}